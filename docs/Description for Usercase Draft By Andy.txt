User Case:
1.US01.01.01
As an owner, I want to remove, edit, or add an item to my inventory that I want to share. It will have a name, quantity, quality, category, if I want to share it with others, and comments.

Task:  In the item list activity, there is a button named Share and after click this button, we can share the items which clicked. The item list should includes the details for items, like quantity, quality, name, and category. And there is another button named Edit, click Edit button and open a dialog or new activity to choose one of remove, edit or add this item which in this list to my inventory.
Test: Junit testing. Test getList(), getItemDetails(); getShareList(); remove(); add(); edit();


2.US01.02.01
As an owner, I want to view my inventory and its details.

Task: Click the Inventory button and open a new activity called Inventory which include all items are added into inventory list. And the inventory list includes all items’ details. 
Test: Junit testing. Test getList(); getItemDetails();


3.US01.03.01
As an owner, I want to view each of my inventory items.

Task: In inventory list, each item can be clicked and open a new activity named ItemViewDetails. In this activity, item which be selected should show the details like quality, quantity, name and category.
Test: Junit testing. Test getItemDetails(); 

4.US01.03.01
As an owner, not every item in my inventory will be shared or listed. Items that are not to publicly shared will not be. As an owner, I might use them for trades.

Task: The share list is different with inventory list, because items may list in inventory but not use for share or some items even not list in inventory list. For this user case,I think we may need at least 4 classes for store those items. 1. InventoryList, 2. ShareList, 3.ItemList, 4.TradeList(a little bit confuse about this user case, need to discuss with team members)
Test: Junit testing. May need 4 different classes but the largest one should be the ItemList which includes all items in it. 1.getList(); 2.getInventoryList(); 3.ShareList(); 4.TradeList();

5.US01.04.01
As an owner, I want to edit and modify inventory items.

Task: In inventory activity, button Edit is for edit items, like change quantity, quality and category. After edit, it will prompt a dialog to warn that we should save it. The dialog includes 2 button, 1. Save, 2. Cancel. If I hit Cancel, the edit should not change anything and dialog cancel.
Test: Junit testing. Test editQuantity(); editQuality(); editCategory(); (or we can use one class called edit(); and it includes all edit features)

6.US01.05.01
As an owner, I want to delete inventory items.

Task: In inventory activity, there is another button named Delete or this delete feature can be includes in the Edit button. It delete items and its’ information from inventory list but not other list(like share list or main list).
Test: Junit testing. Test removeItem();